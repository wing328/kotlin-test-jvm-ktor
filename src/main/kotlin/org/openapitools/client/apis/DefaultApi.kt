/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import org.openapitools.client.models.V1EndpointPost200Response

import org.openapitools.client.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.http.ParametersBuilder
import com.fasterxml.jackson.databind.ObjectMapper

    open class DefaultApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonBlock: ObjectMapper.() -> Unit = ApiClient.JSON_DEFAULT,
    ) : ApiClient(
        baseUrl,
        httpClientEngine,
        httpClientConfig,
        jsonBlock,
    ) {

        /**
        * 
        * 
         * @param stage  
         * @param id  (optional)
         * @param type  (optional)
         * @param scope  (optional)
         * @param name  (optional)
         * @param description  (optional)
         * @param summary  (optional)
         * @param key  (optional)
         * @return V1EndpointPost200Response
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun v1EndpointPost(stage: kotlin.String, id: kotlin.String?, type: kotlin.String?, scope: kotlin.String?, name: kotlin.String?, description: kotlin.String?, summary: kotlin.String?, key: kotlin.String?): HttpResponse<V1EndpointPost200Response> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                        ParametersBuilder().also {
                        id?.apply { it.append("id", id) }
                        type?.apply { it.append("type", type) }
                        scope?.apply { it.append("scope", scope) }
                        name?.apply { it.append("name", name) }
                        description?.apply { it.append("description", description) }
                        summary?.apply { it.append("summary", summary) }
                        key?.apply { it.append("key", key) }
                        }.build()

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()
            stage?.apply { localVariableHeaders["Stage"] = this.toString() }

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.POST,
            "/v1/endpoint",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return urlEncodedFormRequest(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        }
